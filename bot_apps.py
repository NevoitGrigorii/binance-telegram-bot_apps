import os
import logging
from flask import Flask
from telegram import Update, WebAppInfo, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes

# --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ---
# –¢–æ–∫–µ–Ω –±—É–¥–µ–º–æ –±—Ä–∞—Ç–∏ –∑—ñ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")
# URL –Ω–∞—à–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É –Ω–∞ Render (–¥–æ–¥–∞–º–æ –π–æ–≥–æ –ø—ñ–∑–Ω—ñ—à–µ)
WEB_APP_URL = os.environ.get("WEB_APP_URL")

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# --- Flask —á–∞—Å—Ç–∏–Ω–∞ –¥–ª—è –≤—ñ–¥–¥–∞—á—ñ –Ω–∞—à–æ–≥–æ –º—ñ–Ω—ñ-—Å–∞–π—Ç—É ---
# `static_folder` –≤–∫–∞–∑—É—î, —â–æ —Ñ–∞–π–ª–∏ (index.html, etc.) –ª–µ–∂–∞—Ç—å —É –ø–∞–ø—Ü—ñ 'frontend'
app = Flask(__name__, static_folder='frontend', static_url_path='')


# --- Telegram —á–∞—Å—Ç–∏–Ω–∞ ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ù–∞–¥—Å–∏–ª–∞—î –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫—É Web App."""
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫—É, —è–∫–∞ –≤—ñ–¥–∫—Ä–∏—î –Ω–∞—à –º—ñ–Ω—ñ-—Å–∞–π—Ç
    keyboard = [
        [{"text": "üìà –í—ñ–¥–∫—Ä–∏—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫", "web_app": WebAppInfo(url=WEB_APP_URL)}]
    ]
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.",
        reply_markup=reply_markup
    )


def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–ø—É—Å–∫—É."""
    if not TELEGRAM_TOKEN or not WEB_APP_URL:
        logger.error("TELEGRAM_TOKEN —Ç–∞ WEB_APP_URL –º–∞—é—Ç—å –±—É—Ç–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ —è–∫ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞!")
        return

    application = Application.builder().token(TELEGRAM_TOKEN).build()
    application.add_handler(CommandHandler("start", start))

    logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è...")
    application.run_polling()


if __name__ == "__main__":
    # –¶–µ–π –±–ª–æ–∫ –Ω–µ –±—É–¥–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—è –Ω–∞ Render, –∞–ª–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–∏—Ö —Ç–µ—Å—Ç—ñ–≤.
    # –ù–∞ Render –º–∏ –±—É–¥–µ–º–æ –∑–∞–ø—É—Å–∫–∞—Ç–∏ Gunicorn, —è–∫–∏–π –∫–µ—Ä—É–≤–∞—Ç–∏–º–µ Flask `app`.
    main()