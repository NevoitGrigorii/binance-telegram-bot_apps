import os
import logging
import asyncio
from flask import Flask
from telegram import Update, WebAppInfo, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, CommandHandler, ContextTypes
import uvicorn

# --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ---
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")
WEB_APP_URL = os.environ.get("WEB_APP_URL")

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)


# --- –§—É–Ω–∫—Ü—ñ—ó Telegram-–±–æ—Ç–∞ ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    button = KeyboardButton("üìà –í—ñ–¥–∫—Ä–∏—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫", web_app=WebAppInfo(url=WEB_APP_URL))
    keyboard = [[button]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.",
        reply_markup=reply_markup
    )


# --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Telegram Application ---
if not TELEGRAM_TOKEN or not WEB_APP_URL:
    raise ValueError("TELEGRAM_TOKEN —Ç–∞ WEB_APP_URL –º–∞—é—Ç—å –±—É—Ç–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ!")

ptb_app = Application.builder().token(TELEGRAM_TOKEN).build()
ptb_app.add_handler(CommandHandler("start", start))

# --- Flask —á–∞—Å—Ç–∏–Ω–∞ –¥–ª—è –≤—ñ–¥–¥–∞—á—ñ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É ---
flask_app = Flask(__name__, static_folder='frontend', static_url_path='')


@flask_app.route('/')
def index():
    return flask_app.send_static_file('index.html')


# --- –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –≤—Å—å–æ–≥–æ —Ä–∞–∑–æ–º ---
async def main():
    """–ó–∞–ø—É—Å–∫–∞—î –≤–µ–±-—Å–µ—Ä–≤–µ—Ä Uvicorn —Ç–∞ Telegram-–±–æ—Ç–∞ —Ä–∞–∑–æ–º."""
    port = int(os.environ.get('PORT', 8080))

    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞ –Ω–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ Uvicorn-—Å–µ—Ä–≤–µ—Ä
    config = uvicorn.Config(
        "__main__:flask_app",
        host="0.0.0.0",
        port=port,
        log_level="info"
    )
    server = uvicorn.Server(config)

    # –ó–∞–ø—É—Å–∫–∞—î–º–æ PTB Application —Ç–∞ Uvicorn-—Å–µ—Ä–≤–µ—Ä –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ
    await ptb_app.initialize()
    await ptb_app.start()
    await ptb_app.updater.start_polling()
    await server.serve()
    await ptb_app.updater.stop()
    await ptb_app.stop()


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –≥–æ–ª–æ–≤–Ω—É async-—Ñ—É–Ω–∫—Ü—ñ—é
    asyncio.run(main())